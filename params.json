{
  "name": "Export charts as PDF in angular js /Javascript",
  "tagline": "Export charts in PDF",
  "body": "### About Project.\r\nThis project aims at adding the feature of downloading chart images in PDF format in  current angular charts.\r\nAll charts example has been used from http://krispo.github.io/angular-nvd3/\r\n\r\n\r\n### Check demo at\r\nExample for Line charts\r\nhttp://readinspeed.com/trial/chart/downloadchartsasPDF/downloadcharts/LineChart.html\r\n\r\nExample for Cumulative Line Chart\r\nhttp://readinspeed.com/trial/chart/downloadchartsasPDF/downloadcharts/CumalitiveLIneChart.html\r\n\r\n### How to use it?\r\nInitially, download \"Download.zip\", unzip it following folder structure can be observed.\r\n\r\n1. bower_components\r\n2. CumalitiveLIneChart.html\r\n3. LineChart.html\r\n\r\nRun \"LineChart.html\" or \"CumalitiveLIneChart.html\" you will see the demo\r\n\r\nTo install in your application \r\n\r\n1.Following imports need to be added to your HTML file\r\n\r\n    <script src=\"bower_components/angular/angular.min.js\"></script>\r\n    <script src=\"bower_components/d3/d3.min.js\"></script>\r\n    <script src=\"bower_components/nvd3/build/nv.d3.js\"></script> <!-- or use another assembly -->\r\n    <script src=\"bower_components/nvd3/angular-nvd3.js\"></script>\r\n    <script src=\"bower_components/other/FileSaver.js\"></script>\r\n    <script type=\"text/javascript\" src=\"bower_components/other/rgbcolor.js\"></script>\r\n    <script type=\"text/javascript\" src=\"bower_components/other/StackBlur.js\"></script>\r\n    <script type=\"text/javascript\" src=\"bower_components/other/canvg.js\"></script>\r\n    <script type=\"text/javascript\" src=\"bower_components/other/StackBlur.js\"></script>\r\n    <script type=\"text/javascript\" src=\"bower_components/other/jspdf.min.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"bower_components/nvd3/build/nv.d3.css\">\r\n\r\n2. Now add the following code in HTML file implementing graphs.\r\n\r\n    `<button ng-click=\"exportData('testChart','filename')\">Download as Pdf</button>\r\n    <canvas id=\"canvas\" width=\"3000\" height=\"100\">`\r\n\r\nHere pass 'id' of the chart and filename for the downloadable file name in exportData function eg:<nvd3 options=\"options\" data=\"data\" id=\"testChart\"></nvd3> here id is \"testChart\" and downloadable filename is 'filename' so call would be \"exportData('testChart','filename')\"\r\n\r\n3. Now add following methods in your controller.\r\n\r\n//METHOD-1\r\n\r\n    `$scope.exportData = function (id,fileName) {\r\n    var el = document.createElement( 'html' );\r\n    el.innerHTML =document.getElementById(id).innerHTML;\r\n    var svgContent=el.getElementsByTagName( 'svg' );\r\n    var contentModified=svgContent[0].outerHTML;\r\n    contentModified=contentModified.replace('style=\"height: 450px; width: 100%;\"','style=\"height: 450px; width: 100%;fill:#fff;\"');\r\n    contentModified=contentModified.replace(new RegExp('style=\"text-anchor: middle;\"', 'g'), 'style=\"text-anchor:   middle;fill:black;\"');\r\n    contentModified=contentModified.replace(new RegExp('style=\"text-anchor: end;\"', 'g'), 'style=\"text-anchor: end;fill:black;\"');\r\n    $scope.render(contentModified,1500,500);\r\n    };`\r\n\r\n\r\n//METHOD-2\r\n\r\n\r\n    `$scope.render=function(svg, width, height,fileName){\r\n    document.createElement('canvas')\r\n    var c = document.createElement('canvas');\r\n    c.width = width || 1500;\r\n    c.height = height || 500;\r\n    document.getElementById('canvas').innerHTML = '';\r\n    document.getElementById('canvas').appendChild(c);\r\n    if (typeof FlashCanvas != \"undefined\") {\r\n    FlashCanvas.initElement(c);\r\n    }\r\n    canvg(c, svg, { log: true, renderCallback: function (dom) {\r\n    if (typeof FlashCanvas != \"undefined\") {\r\n    document.getElementById('svg').innerHTML = 'svg not supported';\r\n    } else {\r\n    var svg = (new XMLSerializer()).serializeToString(dom);\r\n    var canvasdata = c.toDataURL(\"image/png\");\r\n       var doc = new jsPDF();\r\n    doc.setFontSize(40);\r\n    doc.text(35, 25, \"Sample Text added\");\r\n    doc.addImage(canvasdata, 'png', 15, 40, 230, 100);\r\n    doc.save(fileName+'.pdf');\r\n    }\r\n    }});\r\n    };`\r\n\r\n\r\n    \r\n    \r\n### Authors and Contributors\r\n In 2015 @gansubhai created this project to provide download charts as PDF in angular charts.\r\n\r\n###License\r\n(MIT License)\r\n\r\nCopyright (c) 2011-2016 Ganesh More,\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? (http://readinspeed.com/#three) and weâ€™ll help you sort it out.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}